vi vi /etc/sysctl.conf
net.ipv6.conf.all.disable_ipv6 = 1
net.ipv6.conf.default.disable_ipv6 = 1
# then save
sysctl -p
vi /etc/ssh/sshd_config
Find the line;
#AddressFamily any
And. change it to:
AddressFamily inet
# then save
systemctl restart sshd
vi /etc/postfix/main.cf
#inet_interfaces = localhost
inet_interfaces = 127.0.0.1
# then save
systemctl restart postfix
sudo firewall-cmd --permanent --add-port=8000/tcp
sudo systemctl restart firewalld
sudo yum -y install epel-release
sudo yum -y install python3 python3-pip
sudo yum -y install git
sudo yum -y install wget
sudo yum -y install gcc gcc-c++
sudo yum -y install zlib zlib-devel openssl-devel
sudo yum -y install libffi-devel
sudo yum -y install unzip
cd ~
wget https://www.sqlite.org/2019/sqlite-autoconf-3280000.tar.gz
tar -xzf sqlite-autoconf-3280000.tar.gz
cd sqlite-autoconf-3280000
./configure
make
sudo make install
cd ~
wget https://www.python.org/ftp/python/3.8.3/Python-3.8.3.tgz
tar -zxf Python-3.8.3.tgz
Python-3.8.3
sudo -i
cd /home/thomass/Python-3.8.3
LD_RUN_PATH=/usr/local/lib  ./configure --enable-optimizations
LD_RUN_PATH=/usr/local/lib make altinstall
exit
cd
mkdir simpleisbetterthancomplex.com
cd simpleisbetterthancomplex.com
# Part 1 stuff in window #1
python3.8 -m venv env
source env/bin/activate
pip3.8 install Django
pip3.8 install django-widget-tweaks
mkdir myproject
cd myproject
# Create django project
django-admin startproject myproject
# updated project settings.py for ALLOWED_HOSTS
# start server in window #2
python3.8 manage.py runserver 0:8080
# stop server
# create application #1 in window #1
cd myproject
django-admin startapp boards
# update projects setting.py for INSTALLED_APPS
# create first view in application #1 views.py
# update the projects urls.py
# Part 2 stuff
# setup models.py for application #1
# note ForeignKey needs option on_delete=models.{DO_NOTHING,CASCADE}
# see https://docs.djangoproject.com/en/1.11/ref/models/fields/#django.db.models.ForeignKey
# Run migrate, create tables
python3.8 manage.py makemigrations
python3.8 manage.py migrate
# update application models.py
# updated application views.py
# create project templates dir at same level as manage.py
# create template home.html
# update project settings.py to update TEMPLATES DIR
# do not forget to add import os
# update application views.py to use template
# update template home.html
# create tests for application tests.py and test
python3.8 manage.py test
# create project static dir at same level as manage.py
mkdir -p statics
# from https://getbootstrap.com/docs/4.0/getting-started/download/#compiled-css-and-js Download the Compiled CSS and JS version
# get https://github.com/twbs/bootstrap/releases/download/v4.0.0/bootstrap-4.0.0-dist.zip into static/css
cd static
wget https://github.com/twbs/bootstrap/releases/download/v4.0.0/bootstrap-4.0.0-dist.zip
unzip bootstrap-4.0.0-dist.zip
rm bootstrap-4.0.0-dist.zip
cd ..
# update project settings.py add static info
# update home.html template to use the new css file
# Update home.html to take advantage of the css
# create the super admin user
python3.8 manage.py createsuperuser
# update the application admin.py to add the application to the admin page
# update project urls.py
# update application view.py
# create template topics.html for view update
# create more tests and test
python3.8 manage.py test
# update application views.py to handle 404's
# rerun test
# update the board_topics view
# update tests and retest (errors)
# update home.html template
# retest (good)
# update tests.py and restest (error)
# update topics.html
# retest (good)
# create base.html template
# update home.html and topics.html templates to use base
# retest (good)
# update base.html
# update project urls.py
# update views.py for new view
# create tmplate for new view
# add more tests and test
# update new_topic.html
# add more tests add test (errors)
# add application forms.py
# update application views.py
# test (good)
# update new_topic.html
# update forms.py
# requires pip3.8 install django-widget-tweaks
# update project/settings.py for widget
# update new_topic.html for widget
# create includes dir under templates
# add more tests and test
# Part 4 stuff
# create application #2
django-admin startapp accounts
# update project settings.py with new application
# update project urls.py
# update app 2 views.py
# create signup template
# update tests.py in app 2 and test (good)
# create signup forms (views, template, base, signup, form
# signup logic
# test
# add email address to form
# tests
mkdir static/img
# go to https://www.toptal.com/designers/subtlepatterns/ and get a brackground and unzip and put the png into statig/img
# edit accounts.css
#logout
# get compressed, production jQuery 3.2.1 from
# https://jquery.com/download/
# at 3.5.1
wget --inet4-only https://code.jquery.com/jquery-3.5.1.min.js
# put into static/js
# get Popper at https://popper.js.org/
# new version of popper does not have a download
# use <script src="https://unpkg.com/@popperjs/core@^2.0.0"></script>
# or download https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.11.0/umd/popper.min.js
# update base.html
# update project url's for login
# update project setting.py
# create login template
# refactor templates
# update form.html template to fix login in issue
# create custome template tags
# create dir templatetags under the application 1 dir
# restart serever
# test templatetags
# run tests (good)
# password reset
# add EMAIL_BACKEND to project settings.py
# and add SMTP server info (will not be used unless EMAIL_BACKEND is commented out)
# update project urls.py
# password_reset.html template
# create tests
# setup email stuff
# see https://stackoverflow.com/questions/33195214/django-error-reverse-for-password-reset-confirm-with-arguments-and-keyw for fix to urls.py
